<?php

namespace Gemboot\Libraries;

use Telegram\Bot\Api;

class TelegramLibrary
{

    protected $token;
    protected $bot;
    protected $chat_id;

    protected $disable_notification = false;

    protected $groupId_pti = -1001518863954; // group pti underpressure
    protected $chatId_anggerpputro = 328200606; // chat id anggerpputro


    public function __construct()
    {
        $this->token = app('config')->get('gemboot.notifications.telegram.token');
        $this->chat_id = app('config')->get('gemboot.notifications.telegram.chat_id');
        // $this->chat_id = 328200606;
        $this->bot = new Api($this->token);
    }

    protected function bot()
    {
        return $this->bot;
    }

    protected function getMessageHeader()
    {
        $message = "ðŸ”¥ <strong>" . env('APP_NAME') . "</strong>\n";
        $message .= "Got New Exception!\n";
        // $message .= "<i>Server Time: " . date('Y-m-d H:i:s') . "</i>\n";
        return $message;
    }

    protected function getMessageFooter()
    {
        $message = "\n<i>generated by gemboot-lara</i>";
        return $message;
    }

    protected function sendChatAction($chat_id, $action = 'typing')
    {
        $params = [
            'chat_id' => $chat_id,
            'action' => $action,
        ];

        return $this->bot()->sendChatAction($params);
    }

    protected function sendMessage($chat_id, $message, $message_id = null)
    {
        $this->sendChatAction($chat_id);
        sleep(1);

        $params = [
            'chat_id' => $chat_id,
            'parse_mode' => 'HTML',
            'text' => $message,
            'disable_notification' => $this->disable_notification,
        ];
        if ($message_id) {
            $params['reply_to_message_id'] = $message_id;
        }
        // dd($params);

        return $this->bot()->sendMessage($params);
    }

    public function silently($disable_notification = true)
    {
        $this->disable_notification = $disable_notification;
        return $this;
    }

    public function send($message, $message_id = null)
    {
        $message = $this->getMessageHeader() . "\n$message\n" . $this->getMessageFooter();
        return $this->sendMessage($this->chat_id, $message, $message_id);
    }

    // public function sendMessageToGroupPti($message, $message_id = null)
    // {
    //     $message = $this->getMessageHeader() . "\n$message";
    //     return $this->sendMessage($this->groupId_pti, $message, $message_id);
    // }

    // public function sendMessageToPrivateAnggerpputro($message, $message_id = null)
    // {
    //     $message = $this->getMessageHeader() . "\n$message";
    //     return $this->sendMessage($this->chatId_anggerpputro, $message, $message_id);
    // }
}
